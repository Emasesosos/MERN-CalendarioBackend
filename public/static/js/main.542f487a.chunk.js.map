{"version":3,"sources":["redux/types/types.js","redux/reducers/uiReducer.js","redux/reducers/calendarReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","routers/PublicRoute.js","routers/PrivateRoute.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","redux/actions/events.js","redux/actions/auth.js","components/auth/LoginScreen.js","components/auth/ReestablecerContrasena.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","redux/actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","helpers/calendar-messages-es.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/loading/Spinner.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","e","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","email","password","formValues","className","onSubmit","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","startLogin","placeholder","onChange","ReestablecerContrasena","password1","password2","length","startRestablishPass","RegisterScreen","startRegister","AuthRouter","exact","path","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","initialStateStart","dateStart","setDateStart","initialStateEnd","dateEnd","setDateEnd","titleValid","setTitleValid","setFormValues","useEffect","closeModal","console","log","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","getState","Error","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","Spinner","AppRouter","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.542f487a.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventSetActive: '[Event] Set Active',\r\n    eventLogout: '[Event] Event Logout',\r\n    eventAddNew: '[Event] Add New',\r\n    eventStartAddNew: '[Event] Start Add New',\r\n    eventClearActiveEvent: '[Event] Clear Active Event',\r\n    eventUpdated: '[Event] Event Updated',\r\n    eventDeleted: '[Event] Event Deleted',\r\n    eventLoaded: '[Event] Events Loaded',\r\n\r\n    // authChecking: '[Auth] Checking Login State',\r\n    authCheckingFinish: '[Auth] Finish Checking Login State',\r\n    authStartLogin: '[Auth] Start Login',\r\n    authLogin: '[Auth] Login',\r\n    authStartRegister: '[Auth] Start Register',\r\n    authStartTokenRenew: '[Auth] Start Token Renew',\r\n    authLogout: '[Auth] Logout',\r\n    authRestablishPass: '[Auth] Restablish Pass'\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","// import moment from 'moment';\r\nimport { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del Jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Emmanuel',\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload,\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload],\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(event => {\r\n                    return (event.id === action.payload.id) ? action.payload : event;\r\n                })\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => {\r\n                    return (event.id !== state.activeEvent.id)\r\n                }),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n// Con Middleware\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\n// Sin Middleware\r\n// export const store = createStore(\r\n//     reducers,\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                    (isAuthenticated)\r\n                        ? <Redirect to=\"/\" /> \r\n                        : <Component { ...props } />\r\n                )\r\n            }\r\n        />\r\n    );\r\n\r\n};\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                    (isAuthenticated)\r\n                        ? <Component { ...props } />\r\n                        : <Redirect to=\"/auth/login\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\r\n\r\nconst useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n};\r\n\r\nexport default useForm;","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n// Fecth sin Token\r\nconst fetchSinToken = (endPoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endPoint}`; // http://localhost:4000/api/(auth/events)\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n};\r\n\r\n//Fetch con Token\r\nconst fetchConToken = (endPoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endPoint}`; // http://localhost:4000/api/(auth/events)\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n};\r\n\r\n// Fetch Send Email\r\nconst fetchCorreo = (endPoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endPoint}`; // http://localhost:4000/api/(auth/events)\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken,\r\n    fetchCorreo\r\n};","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    //  console.log(events);\r\n    return events.map((e) => {\r\n        return {\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        };\r\n    });\r\n\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../../helpers/fetch\";\r\nimport { prepareEvents } from \"../../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n/* ***** Acciones de CELENDAR: Events ***** */\r\n\r\n// Preparar Nuevo en vento en DB\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            // console.log(event);\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            if (!body.ok) throw new Error('No se pudo realizar la petición');\r\n            // console.log(body);\r\n            event.id = body.evento.id;\r\n            event.user = {\r\n                _id: uid,\r\n                name\r\n            };\r\n            // console.log(event);\r\n            dispatch(eventAddNew(event));\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n// Agregar nuevo Evento\r\nconst eventAddNew = (event) => {\r\n    //export const eventAddNew = (event) => {\r\n    return {\r\n        type: types.eventAddNew,\r\n        payload: event\r\n    };\r\n};\r\n\r\n// Activar Evento\r\nexport const eventSetActive = (event) => {\r\n    return {\r\n        type: types.eventSetActive,\r\n        payload: event\r\n    };\r\n};\r\n\r\n// Limpiar Nota Activa\r\nexport const eventClearActiveEvent = () => {\r\n    return {\r\n        type: types.eventClearActiveEvent,\r\n    };\r\n};\r\n\r\n// Actualizar Nota BD\r\nexport const eventStartUpdate = (event) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            // console.log(event);\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            // console.log(body);\r\n            if (!body.ok) Swal.fire('Error', body.msg, 'error');\r\n            dispatch(eventUpdated(event));\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n};\r\n\r\n// Actualizar Nota state\r\nconst eventUpdated = (event) => {\r\n    return {\r\n        type: types.eventUpdated,\r\n        payload: event\r\n    }\r\n};\r\n\r\n// Eliminar Nota BD\r\nexport const eventStartDelete = () => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            // console.log(body);\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n};\r\n\r\n// Eliminar Nota state\r\nconst eventDeleted = () => {\r\n    return {\r\n        type: types.eventDeleted,\r\n    };\r\n};\r\n\r\n// Cargar Eventos de la BD\r\nexport const eventStartLoaded = () => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            // console.log(body);\r\n            if (!body.ok) throw new Error('No se pudo realizar la petición');\r\n\r\n            const events = prepareEvents(body.eventos);\r\n            // console.log(events);\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n// Cargar eventos en el State\r\nconst eventLoaded = (events) => {\r\n\r\n    return {\r\n        type: types.eventLoaded,\r\n        payload: events\r\n    };\r\n\r\n};\r\n\r\n// Event Logout\r\nexport const eventLogout = () => {\r\n\r\n    return {\r\n        type: types.eventLogout\r\n    };\r\n\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchSinToken, fetchConToken } from \"../../helpers/fetch\"; // fetchCorreo,\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n/* ***** Acciones de Auth: Usuario ***** */\r\n\r\n// Inicio Login Usuario\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async(dispatch) => { // Thunk\r\n\r\n        // console.log(email, password);\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n// Start Register\r\nexport const startRegister = (name, email, password) => {\r\n\r\n    return async(dispatch) => { // Thunk\r\n\r\n        // console.log(name, email, password);\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            // const sendCorreo = await fetchCorreo('auth/send-mail', { email }, 'POST');\r\n            // const bodyCorreo = await sendCorreo.json();\r\n            // console.log(bodyCorreo);\r\n            // Swal.fire({\r\n            //     icon: 'success',\r\n            //     title: 'Se creó nuevo Usuario',\r\n            //     text: bodyCorreo.msg\r\n            // });\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n// Start Restablish Password\r\nexport const startRestablishPass = (email, password) => {\r\n\r\n    return async(dispatch) => { // Thunk\r\n\r\n        // console.log(email, password);\r\n        const resp = await fetchSinToken('auth/restablish-pass', { email, password }, 'PUT');\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            // const sendCorreo = await fetchCorreo('auth/resend-mail', { email }, 'POST');\r\n            // const bodyCorreo = await sendCorreo.json();\r\n            // // console.log(bodyCorreo);\r\n            // Swal.fire({\r\n            //     icon: 'success',\r\n            //     title: body.msg,\r\n            //     text: bodyCorreo.msg\r\n            // });\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n// Start Checking\r\nexport const startChecking = () => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            // Swal.fire('Error', body.msg, 'error');\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\nconst checkingFinish = () => {\r\n\r\n    return {\r\n        type: types.authCheckingFinish\r\n    };\r\n\r\n};\r\n\r\n// Login Usuario\r\nconst login = (user) => {\r\n\r\n    return {\r\n        type: types.authLogin,\r\n        payload: user\r\n    };\r\n\r\n};\r\n\r\n// Start Logout\r\nexport const startLogout = () => {\r\n\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    };\r\n\r\n};\r\n\r\n// Logout\r\nconst logout = () => {\r\n\r\n    return {\r\n        type: types.authLogout,\r\n    };\r\n\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport useForm from '../../hooks/useForm';\r\nimport { startLogin } from '../../redux/actions/auth';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialForm = {\r\n        email: 'emasesosos@gmail.com',\r\n        password: '123456',\r\n    };\r\n    \r\n    const [ formValues, handleInputChange ] = useForm(initialForm);\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // console.log(formValues);\r\n        dispatch(startLogin(email, password));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form\r\n                        onSubmit={ handleLogin }\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"email\"\r\n                                value={ email }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={ password }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group btn-auth\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n\r\n                        <Link \r\n                            to=\"/auth/register\"\r\n                            // to=\"/register\"\r\n                            className=\"btnSubmit btn-auth\"\r\n                        >\r\n                            Crear Nueva Cuenta\r\n                        </Link>\r\n\r\n                        <Link \r\n                            to=\"/auth/restablish\"\r\n                            // to=\"/restablish\"\r\n                            className=\"btnSubmit btn-auth mt-3\"\r\n                        >\r\n                            ¿Olvidaste tu Contraseña?\r\n                        </Link>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport useForm from '../../hooks/useForm';\r\nimport { startRestablishPass } from '../../redux/actions/auth';\r\n// import './login.css';\r\n\r\nexport const ReestablecerContrasena = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialForm = {\r\n        email: 'correo@correo.com',\r\n        password1: '123456',\r\n        password2: '123456',\r\n    };\r\n    \r\n    const [ formValues, handleInputChange ] = useForm(initialForm);\r\n\r\n    const { email, password1, password2 } = formValues;\r\n\r\n    const handleRestablishPass = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(password1.length < 6) {\r\n            return Swal.fire('Error', 'La contraseña debe de ser de al menos 6 caracteres', 'error');\r\n        }\r\n\r\n        if(password1 !== password2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n        // console.log(formValues);\r\n        dispatch(startRestablishPass(email, password1));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Restablecer Contraseña</h3>\r\n                    <form\r\n                        onSubmit={ handleRestablishPass }\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"email\"\r\n                                value={ email }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nueva Contraseña\" \r\n                                name=\"password1\"\r\n                                value={ password1 }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la Contraseña\" \r\n                                name=\"password2\"\r\n                                value={ password2 }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group btn-auth\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Cambiar Contraseña\" />\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport useForm from '../../hooks/useForm';\r\nimport { startRegister } from '../../redux/actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialForm = {\r\n        name: 'Emasesosos',\r\n        email: 'correo@correo.com',\r\n        password1: '123456',\r\n        password2: '123456',\r\n    };\r\n    \r\n    const [ formValues, handleInputChange ] = useForm(initialForm);\r\n\r\n    const { name, email, password1, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(password1.length < 6) {\r\n            return Swal.fire('Error', 'La contraseña debe de ser de al menos 6 caracteres', 'error');\r\n        }\r\n\r\n        if(password1 !== password2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n        // console.log(formValues);\r\n        dispatch(startRegister(name, email, password1));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form\r\n                        onSubmit={ handleRegister }\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"name\"\r\n                                value={ name }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"email\"\r\n                                value={ email }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"password1\"\r\n                                value={ password1 }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"password2\"\r\n                                value={ password2 }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group btn-auth\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n\r\n                        <Link \r\n                            // to=\"/auth/login\"\r\n                            to=\"/login\"\r\n                            className=\"btnSubmit btn-auth\"\r\n                        >\r\n                            ¿Ya tienes cuenta?\r\n                        </Link>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { ReestablecerContrasena } from '../components/auth/ReestablecerContrasena';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"\">\r\n                <Switch>\r\n\r\n                    <Route \r\n                        exact \r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact \r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact \r\n                        path=\"/auth/restablish\"\r\n                        component={ ReestablecerContrasena }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../redux/actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const { title, user } = event;\r\n    \r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n/* ***** Acciones de UI ***** */\r\n\r\n// Abrir Modal\r\nexport const uiOpenModal = () => {\r\n    return {\r\n        type: types.uiOpenModal,\r\n    }\r\n};\r\n\r\n// Cerrar Modal\r\nexport const uiCloseModal = () => {\r\n    return {\r\n        type: types.uiCloseModal,\r\n    }\r\n};\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../redux/actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../redux/actions/events'; // eventAddNew, eventUpdated\r\n\r\nconst customStyles = {\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialStateStart = now.toDate();\r\n    const [dateStart, setDateStart] = useState(initialStateStart);\r\n\r\n    const initialStateEnd = nowPlus1.toDate();\r\n    const [dateEnd, setDateEnd] = useState(initialStateEnd);\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    \r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        console.log('Closing...');\r\n        // TODO de cerrar Modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n        \r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        console.log(e);\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        console.log(e);\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    };\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        // console.log(formValues);\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)) {\r\n            // console.log('Fecha 2 debe de ser mayor');\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if(title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        // TODO realizar grabación o actualización\r\n        if(activeEvent) {\r\n            // dispatch(eventUpdated(formValues)); // Desarrollo\r\n            dispatch(eventStartUpdate(formValues)); // Frontend y Backend integrado\r\n        } else {\r\n            dispatch(eventStartAddNew({\r\n                ...formValues\r\n            }));\r\n            /* Desarrollo\r\n            dispatch(eventStartAddNew({\r\n                ...formValues,\r\n                id: new Date().getTime(),\r\n                user: {\r\n                    _id: 123,\r\n                    name: \"Casandra\",\r\n                }\r\n            }));\r\n            */\r\n        }\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            //onAfterOpen={afterOpenModal}\r\n            onRequestClose={ closeModal }\r\n            style={customStyles}\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../redux/actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick= { handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    );\r\n};\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../redux/actions/events'; // eventDeleted,\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        // dispatch(eventDeleted()); // Desarrollo\r\n        dispatch(eventStartDelete()); // Frontend y Backend integrado\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from '../../redux/actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoaded } from '../../redux/actions/events';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment); \r\n\r\n// const events = [{\r\n//     title: 'Cumpleaños del Jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Emmanuel',\r\n//     }\r\n// }];\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { events, activeEvent } = state;\r\n\r\n    const initialState = localStorage.getItem('lastView') || 'month';\r\n    const [lastView, setLastView] = useState(initialState);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoaded());\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e);\r\n        // console.log('Abrir Modal');\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        // console.log(e);\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e);\r\n        dispatch(eventClearActiveEvent());\r\n    };\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        // console.log(event);\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view= { lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                activeEvent && <DeleteEventFab /> \r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className=\"main-spinner\">\r\n            <div className=\"spinner\">\r\n                <div className=\"dot1\"></div>\r\n                <div className=\"dot2\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    // Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\n// import { RegisterScreen } from '../components/auth/RegisterScreen';\r\n// import { LoginScreen } from '../components/auth/LoginScreen';\r\n// import { ReestablecerContrasena } from '../components/auth/ReestablecerContrasena';\r\nimport { startChecking } from '../redux/actions/auth';\r\nimport { Spinner } from '../components/loading/Spinner';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid }= useSelector(state => state.auth);\r\n\r\n    // console.log(checking);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if(checking) {\r\n        return (<Spinner />);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    {/*\r\n                        <Route exact path=\"/login\" component={ LoginScreen } />\r\n                        <Route exact path=\"/register\" component={ RegisterScreen } />\r\n                        <Route exact path=\"/restablish\" component={ ReestablecerContrasena } />\r\n                        <Route exact path=\"/\" component={ CalendarScreen } />\r\n                        <Redirect to=\"/\" />\r\n                    */}\r\n                    \r\n                    <PublicRoute \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    \r\n                    <PrivateRoute \r\n                        exact\r\n                        path=\"/\" \r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />             \r\n                    \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render( <\n    CalendarApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}